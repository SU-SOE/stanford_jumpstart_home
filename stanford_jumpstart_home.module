<?php
/**
 * @file
 * @author Shea McKinney <sheamck@stanford.edu>
 * Provides the ability to offer several layouts on the home page via context.
 * Provides a dashboard administrative page to toggle through those layouts
 *
 */

/**
 * Implements hook_ctools_plugin_api().
 */
function stanford_jumpstart_home_ctools_plugin_api() {
  list($module, $api) = func_get_args();
  if ($module == "context" && $api == "context") {
    return array("version" => "3");
  }
}

/**
 * Implements hook_help().
 */
function stanford_jumpstart_home_help($path, $arg) {
  switch ($path) {
    // Main module help for the block module
    /*
     *case 'admin/help#block':
     *  return '<p>' . t('Blocks are boxes of content rendered into an area, or region, of a web page. The default theme Bartik, for example, implements the regions "Sidebar first", "Sidebar second", "Featured", "Content", "Header", "Footer", etc., and a block may appear in any one of these areas. The <a href="@blocks">blocks administration page</a> provides a drag-and-drop interface for assigning a block to a region, and for controlling the order of blocks within regions.', array('@blocks' => url('admin/structure/block'))) . '</p>';
     */
    case 'admin/stanford-jumpstart-home':
      return '<p>' . t('For more help please contact %sws', array('%sws' => l('Stanford Web Services', 'mailto:sitesjumpstart-help@lists.stanford.edu'))) . '</p>';
  }
}

/**
 * Implements hook_permission().
 */
function stanford_jumpstart_home_permission() {
  return array(
    /*
     *'administer my module' =>  array(
     *  'title' => t('Administer my module'),
     *  'description' => t('Perform administration tasks for my module.'),
     *),
     */
    'administer stanford homepage' =>  array(
      'title' => t('Administer Stanford Homepage'),
      'description' => t('Allow user to change and modify the homepage settings'),
    ),
    'see enabled homepage options' =>  array(
      'title' => t('See enabled options'),
      'description' => t('Allow user to see and choose an enabled homepage option.'),
    ),
    'see disabled homepage options' => array(
      'title' => t('See disabled homepage options'),
      'description' => t('See disabled homepage options.'),
    ),
  );
}

/**
 * Implements hook_menu().
 */
function stanford_jumpstart_home_menu() {
  /*
   *$items['blog'] = array(
   *  'title' => 'blogs',
   *  'page callback' => 'blog_page',
   *  'access arguments' => array('access content'),
   *  'type' => MENU_SUGGESTED_ITEM,
   *);
   */
  $items['admin/stanford-jumpstart/customize-design'] = array(
    'title' => 'Customize Design',
    'page callback' => 'stanford_jumpstart_home_dashboard',
    'access arguments' => array('administer stanford homepage'),
    'type' => MENU_LOCAL_TASK,
  );

  return $items;
}

/**
 * The dashboard functionality for the home page.
 * @return [type] [description]
 */
function stanford_jumpstart_home_dashboard() {
  $output = "";
  drupal_add_css(drupal_get_path('module', 'stanford_jumpstart_home') . "/css/stanford_jumpstart_home.admin.css");
  $output .= drupal_render(drupal_get_form('stanford_jumpstart_homepage_dashboard_form'));
  return $output;
}

/**
 * Implements hook_context_default_contexts().
 */
function stanford_jumpstart_home_context_default_contexts() {
  $export = stanford_jumpstart_home_get_contexts();

  if (empty($export)) {
    return array();
  }

  return $export;
}

/**
 * Loads up and returns all contexts that are in the layouts folder.
 * @return [type] [description]
 */
function stanford_jumpstart_home_get_contexts($clear_cache = FALSE) {

  // cache_set($cid, $data, $bin = 'cache', $expire = CACHE_PERMANENT);
  // cache_get($cid, $bin = 'cache');
  // cache_clear_all($cid = NULL, $bin = NULL, $wildcard = FALSE)

  $cache = cache_get('jumpstart_home_context');
  $contexts = array();

  if (!$clear_cache && is_object($cache) && !isset($cache->data[''])) {
    $contexts = $cache->data;
  }
  else {
    $dir = drupal_get_path('module', 'stanford_jumpstart_home') . '/layouts';
    $mask = "/.*\.inc$/";
    $options['key'] = 'name';
    $files = file_scan_directory($dir, $mask, $options);

    foreach ($files as $name => $data) {
      require_once DRUPAL_ROOT . "/" . $data->uri;
      $contexts[$context->name] = $context;
    }

  }

  cache_set('jumpstart_home_context', $contexts);

  return $contexts;
}

/**
 * [stanford_jumpstart_homepage_dashboard_form description]
 * @param  [type] $form       [description]
 * @param  [type] $form_state [description]
 * @return [type]             [description]
 */
function stanford_jumpstart_homepage_dashboard_form($form, $form_state) {

  $filename = drupal_get_path('module', 'stanford_jumpstart_home') . "/stanford_jumpstart_home.info";
  $info = drupal_parse_info_file($filename);
  $layouts = $info['layout'];
  $form['layouts']["#tree"] = TRUE;

  foreach ($layouts as $index => $config) {

    $context = context_load($config['context']);
    $options = variable_get('sjh_' . $context->name, array());
    $key = $context->name;;
    $access = user_access('see enabled homepage options');

    if (!$options['site_admin']) {
      $access = user_access('see disabled homepage options');
    }

    // Field Group
    $form['layouts'][$key] = array(
      '#type' => 'container',
      '#tree' => TRUE,
      '#attributes' => array(
        'class' => array(
          'homepage-layout',
        ),
      ),
      '#access' => $access,
    );

    if (!$context->disabled) {
      $form['layouts'][$key]["#attributes"]['class'][] = "selected";
    }

    // Show this option to site owner
    $form['layouts'][$key]['site_admin'] = array(
      '#type' => 'checkbox',
      '#title' => t('Enable this option.'),
      '#description' => t('This checkbox enables users with the "See enabled homepage options" permission to select this layout.'),
      '#default_value' => isset($options['site_admin']) ? $options['site_admin'] : "",
      '#access' => user_access('see disabled homepage options'),
    );

    // Thumbnail
    $img_path = drupal_get_path('module', 'stanford_jumpstart_home') . "/img/" . $config['thumb'];
    $variables = array(
      'path' => $img_path,
      'alt' => $config['title'],
      'title' => $config['title'],
    );
    $form['layouts'][$key]['thumb']["#markup"] = theme_image($variables);

    // Enabled
    $selectedornot = ($context->disabled) ? t("Select") : t("Selected");
    # $class = ($context->disabled) ? "" : "selected";
    # $form[$key]['status']['#markup'] = "<div><a class=\"$class button\" name=\"". $context->name . "\" id=\"" . $context->name . "\">" . (($context->disabled) ? t("Select") : t("Selected")) . "</a></div>";

    $form['layouts'][$key]['selecter'] = array(
      '#type' => "button",
      '#value' => $selectedornot,
      '#name' => $context->name . "_select",
      '#submit' => array('stanford_homepage_switch_context'),
      '#executes_submit_callback' => TRUE,
      '#attributes' => array('class' => array('clear-both')),
      "#disabled" => !$context->disabled,
      '#tree' => TRUE,
    );

    // Title
    $form['layouts'][$key]['title']['#markup'] = "<h2 class=\"title\">" . t($config['title']) . "</h2>";

    // Description
    $form['layouts'][$key]['description']['#markup'] = check_markup($config['description'], 'filtered_html');

    // Context name
    $form['layouts'][$key]["context_name"] = array(
      '#type' => "hidden",
      '#value' => $config['context'],
    );

    // State machine, or just form states.
    $form['layouts'][$key]["selectedstate"] = array(
      '#type' => 'hidden',
      '#value' => $context->disabled,
    );

    // Header Image Field
    if (!empty($config['header_image'])) {
      $form['layouts'][$key]['header_image'] = array(
        '#title' => t('Header image'),
        '#type' => 'managed_file',
        '#description' => t('The uploaded image will be displayed on this layout as a header image.'),
        '#default_value' => isset($options['header_image']) ? $options['header_image'] : "",
        '#upload_location' => 'public://stanford_jumpstart_home/header/',
        '#process' => array('stanford_jumpstart_home_process_file_managed'),
        '#states' => array(
          'invisible' => array(
           ':input[name="layouts[' . $key . '][selectedstate]"]' => array('value' => 1),
          ),
        ),
      );
    }

    // Background Image Field
    if (!empty($config['background_image'])) {
      $form['layouts'][$key]['background_image'] = array(
        '#title' => t('Background image'),
        '#type' => 'managed_file',
        '#description' => t('The uploaded image will be displayed on this layout as a background image.'),
        '#default_value' => isset($options['background_image']) ? $options['background_image'] : "",
        '#upload_location' => 'public://stanford_jumpstart_home/background/',
        '#process' => array('stanford_jumpstart_home_process_file_managed'),
        '#states' => array(
          'invisible' => array(
           ':input[name="layouts[' . $key . '][selectedstate]"]' => array('value' => 1),
          ),
        ),
      );
    }

    // Color picker
    if (!empty($config['color'])) {
      $form['layouts'][$key]['color'] = array(
        '#title' => t('Choose color'),
        '#type' => 'select',
        '#description' => t('Choose the color you would like your background to be.'),
        '#options' => array(
          '#FF00FF' => t('Supa Pink'),
          '#00FF00' => t('Supa Green'),
          '#000000' => t('black'),
        ),
        '#default_value' => isset($options['color']) ? $options['color'] : '',
        '#states' => array(
          'invisible' => array(
           ':input[name="layouts[' . $key . '][selectedstate]"]' => array('value' => 1),
          ),
        ),
      );
    }

    // Light & Dark options
    // Color picker
    if (!empty($config['light_dark'])) {
      $form['layouts'][$key]['light_dark'] = array(
        '#title' => t('Choose a title color'),
        '#type' => 'radios',
        '#description' => t('Choose the color you would like your header title to be.'),
        '#options' => array(
          'light' => t('Light'),
          'dark' => t('Dark'),
        ),
        "#default_value" => isset($options['light_dark']) ? $options['light_dark'] : 'light',
        '#states' => array(
          'invisible' => array(
           ':input[name="layouts[' . $key . '][selectedstate]"]' => array('value' => 1),
          ),
        ),
      );
    }

    // Remove these so we can check for other config.
    unset($config['context']);
    unset($config['thumb']);
    unset($config['title']);
    unset($config['description']);

    if (count($config) >= 1) {
      $form['layouts'][$key]['submit'] = array(
        '#type' => 'submit',
        '#value' => t('Save settings'),
        '#states' => array(
          'invisible' => array(
           ':input[name="layouts[' . $key . '][selectedstate]"]' => array('value' => 1),
          ),
        ),
      );
    }

  } // End for each loop

  // Pull theme options from the theme itself

  // Include theme-settings.php
  // require_once drupal_get_path('theme', 'stanford_light') . "/theme-settings.php";
  // $theme_form = array();

  // // Set the theme temporarily
  // $GLOBALS['theme_key'] = 'stanford_light';
  // stanford_light_form_system_theme_settings_alter($theme_form, $form_state);

  // $form['design_container'] = $theme_form['design_container'];
  // $form['design_container']['#attributes']["style"] = array("width: 100%;");
  // $form['design_container']['#tree'] = TRUE;
  // $form['design_container']['#collapsible'] = FALSE;
  // $form['design_container']['#title'] = t('Choose styles');

  // $form['design_container']['styles']['#title'] = t('Styles');

  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Save settings'),
    '#prefix' => "<div style=\"clear: both;\">",
    '#suffix' => "</div>",
    '#access' => user_access('see disabled homepage options'),
  );

  return $form;
}

/**
 * Save all the images!
 * @param  [type] $form       [description]
 * @param  [type] $form_state [description]
 * @return [type]             [description]
 */
function stanford_jumpstart_homepage_dashboard_form_submit($form, $form_state) {

  global $user;

  $values = $form_state['values'];
  foreach ($values['layouts'] as $key => $config) {

    if (!empty($config['background_image']) && is_numeric($config['background_image'])) {
      $fid = $config['background_image'];
      // Load the file via file.fid.
      $file = file_load($fid);
      // Change status to permanent.
      $file->status = FILE_STATUS_PERMANENT;
      // Save.
      file_save($file);
      // // Record that the module (in this example, user module) is using the file.
      file_usage_add($file, 'user', 'user', $file->uid);
    }

    if (!empty($config['header_image']) && is_numeric($config['header_image'])) {
      $fid = $config['header_image'];
      // Load the file via file.fid.
      $file = file_load($fid);
      // Change status to permanent.
      $file->status = FILE_STATUS_PERMANENT;
      // Save.
      file_save($file);
      // // Record that the module (in this example, user module) is using the file.
      file_usage_add($file, 'user', 'user', $file->uid);
    }

    variable_set('sjh_' . $config['context_name'], $config);
  }

  // Save the theme settings
  // $theme_settings = variable_get('theme_stanford_light_settings', array());
  // foreach ($values['design_container'] as $key => $value) {
  //   $theme_settings[$key] = $value;
  // }
  // variable_set('theme_stanford_light_settings', $theme_settings);

  drupal_set_message('Customized design options saved', 'status');

}

/**
 * Changes the context based on the submitted button from the dashboard form.
 * @param  [type] $form       [description]
 * @param  [type] $form_state [description]
 * @return [type]             [description]
 */
function stanford_homepage_switch_context($form, $form_state) {

  $values = $form_state['values'];
  $submit_button = $form_state['triggering_element'];
  $selected = $form_state["clicked_button"]['#parents'][1];
  $context_status = variable_get('context_status', array());

  foreach ($values['layouts'] as $k => $config) {
    $context_name = $config['context_name'];
    $context_status[$context_name] = TRUE;
  }

  $context_status[$selected] = FALSE;

  variable_set('context_status', $context_status);
  variable_set('stanford_jumpstart_home_active', $selected);
  cache_clear_all('context', 'cache');

  // Save the things.
  stanford_jumpstart_homepage_dashboard_form_submit($form, $form_state);
}

/**
 * Additional field formatter for file_managed to display a thumbnail.
 * @param  [type] $element    The form element
 * @param  [type] $form_state [description]
 * @param  [type] $form       [description]
 * @return [type]             [description]
 */
function stanford_jumpstart_home_process_file_managed($element, &$form_state, $form) {
  $element = file_managed_file_process($element, $form_state, $form);

  $uri = $element['#file']->uri;

  if (!empty($uri)) {
    $variables = array('style_name' => 'medium', 'path' => $uri, 'alt' => 'image', 'title' => 'image', 'attributes' => array('class' => 'image-thumb'));
    $thumb = theme_image_style($variables);
    $element['filename']['#markup'] = "<span class=\"file\">" . $thumb . "</span>";
  }

  return $element;
}

/**
 * [stanford_jumpstart_home_preprocess_html description]
 * @param  [type] $vars [description]
 * @return [type]       [description]
 */
function stanford_jumpstart_home_process_html(&$vars) {
  global $theme;

  $context_name = variable_get('stanford_jumpstart_home_active', '');

  // No active context set.
  if (empty($context_name)) {
    return;
  }

  $settings = variable_get('sjh_' . $context_name, null);
  $vars['classes'] .= " active-home-context " . drupal_clean_css_identifier($context_name);

  // Missing settings.
  if (is_null($settings)) {
    return;
  }

  $fid = $settings['background_image'];
  $file = file_load($fid);

  if (!empty($file)) {
    $vars['body_bg_type'] = 'photobg';
    $vars['body_bg_classes'] = 'bodybg';
    $vars['body_bg_path'] = $file->uri;
  }

  if (!empty($settings['header_image'])) {
    $vars['header_bkg_style'] = "header-bkg-image";
    $vars['header_bkg'] = 'header-bkg';
  }

  if (isset($settings['light_dark'])) {
    if ($settings['light_dark'] == "light") {
      $vars['header_bkg_text'] = "header-bkg-text-light";
    }
  }

}

/**
 * [stanford_jumpstart_home_process_page description]
 * @param  [type] $vars [description]
 * @return [type]       [description]
 */
function stanford_jumpstart_home_process_page(&$vars) {

  $context_name = variable_get('stanford_jumpstart_home_active', '');

  // No active context set.
  if (empty($context_name)) {
    return;
  }

  $settings = variable_get('sjh_' . $context_name, null);

  // Missing settings.
  if (is_null($settings)) {
    return;
  }

  $fid = $settings['header_image'];
  $file = file_load($fid);

  if (!empty($file)) {
    $vars['header_bkg_style'] = "header-bkg-image";
    $vars['header_bkg'] = 'header-bkg';
    $vars['header_bkg_path'] = $file->uri;
  }

}

